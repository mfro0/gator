
    USE AT YOUR OWN RISK !
    
    This is an experimental driver.. who knows what it'll do ;)
    
hints:

    * edit Makefile 
    * compile
    * become root and issue "make test"
    * start X
    * get AVview, compile it
    * run AVview
    * enjoy
    * tweak
    
    kmultimedia websites: http://gatos.sf.net
    

Additional notes:

    1) I guess I should have put this into README:

        the way km works is this:

        * you setup TV-in using AVview and Xserver - which means
          you see TV in a window.

        * now you can use km to see video data. When an application
          opens /dev/videoXXX created by km the code check to see
          whether AIW card is receiving data from the decoder.
          If this is true km sets up DMA transfers to deliver data
          into main RAM. If not it reports -ENODATA.

    2) So, to use xv_stream you need _two_ networked computers: one with
       AVview running and another to put xv_stream window on. The result
       is that you should see more or less the same TV image in both
       windows. Displaying both on the same screen will not work as
       ATI cards have only one overlay scalar unit and both xawtv and
       xv_stream need it.

    3) what can you do if you have one computer ? Get AVview and CVS
       version of ffmpeg off Sourceforge and capture snapshots and streams 
       with AVview. You can view them later with xine, for example.
       
       If you have got ffmpeg 0.4.5 get the patch from www.linuxvideo.org/gatos
       this version has a bug and will not work otherwise

    4) you cannot use this module simultaneously with Linux framebuffer devices.

    5) you need Linux 2.4.9 (or later) to compile it properly
       
    6) Note to Radeon owners: As of 12/11/01 this module will ONLY work 
       with devel branch of ati_xv - try using the version tagged
       checkpoint_2 (you will also need to get drm-kernel with the same tag)
       	  
    7) You might have problems if you don't let your BIOS assign an irq to 
       your video card.

	                        Vladimir Dergachev
